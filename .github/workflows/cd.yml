name: TodoTemplate CD

env:
  WEB_APP_DEPLOYMENT_TYPE: 'SSR' # You can choose either Static, DefaultDeploymentType, PWA or SSR
  API_SERVER_ADDRESS: 'https://todo.bitplatform.dev/api/'

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:

  #build-blazor-api-wasm:
  #  name: build blazor api + web assembly
  #  runs-on: ubuntu-latest

  #  steps:
    
  #  - name: Checkout source code
  #    uses: actions/checkout@v3
    
  #  - name: Setup .NET
  #    uses: actions/setup-dotnet@v3
  #    with:
  #      global-json-file: src/global.json

  #  - name: Switch to blazor web assembly
  #    run:  sed -i 's/Microsoft.NET.Sdk.Web/Microsoft.NET.Sdk.BlazorWebAssembly/g' src/Client/Web/TodoTemplateDevOps.Client.Web.csproj

  #  - name: Restore workloads
  #    run: dotnet workload restore src/Client/Web/TodoTemplateDevOps.Client.Web.csproj /P:BlazorMode=BlazorWebAssembly /P:WebAppDeploymentType="${{ env.WEB_APP_DEPLOYMENT_TYPE }}"
      
  #  - name: Build (To generate CSS/JS files)
  #    run: dotnet build src/Server/Api/TodoTemplateDevOps.Server.Api.csproj /P:BlazorMode=BlazorWebAssembly /P:WebAppDeploymentType="${{ env.WEB_APP_DEPLOYMENT_TYPE }}" /P:Configuration=Release

  #  - name: Publish
  #    run: dotnet publish src/Server/Api/TodoTemplateDevOps.Server.Api.csproj /P:BlazorMode=BlazorWebAssembly /P:WebAppDeploymentType="${{ env.WEB_APP_DEPLOYMENT_TYPE }}" /P:Configuration=Release -o ${{env.DOTNET_ROOT}}/api-web

  #  - name: Upload artifact for deployment job
  #    uses: actions/upload-artifact@v3
  #    with:
  #      name: api-web
  #      path: ${{env.DOTNET_ROOT}}/api-web

  #build-blazor-hybrid-windows:
  #  name: build blazor hybrid (windows)
  #  runs-on: windows-latest

  #  steps:
    
  #  - name: Checkout source code
  #    uses: actions/checkout@v3
    
  #  - name: Setup .NET
  #    uses: actions/setup-dotnet@v3
  #    with:
  #      global-json-file: src/global.json

  #  - name: Update appsettings.json api server address
  #    uses: microsoft/variable-substitution@v1 
  #    with:
  #      files: 'src/Client/Shared/wwwroot/appsettings.json'
  #    env:
  #      ApiServerAddress: ${{ env.API_SERVER_ADDRESS }}

  #  - name: Restore workloads
  #    run: dotnet workload restore src/Client/App/TodoTemplateDevOps.Client.App.csproj /P:BlazorMode=BlazorHybrid -f net7.0-windows10.0.19041.0

  #  - name: Build (To generate CSS/JS files)
  #    run: dotnet build src/Client/App/TodoTemplateDevOps.Client.App.csproj /P:BlazorMode=BlazorHybrid /P:Configuration=Release /P:WindowsPackageType=None /P:SelfContained=true /P:WindowsAppSDKSelfContained=true /P:GenerateAppxPackageOnBuild=false /p:RuntimeIdentifier=win10-x86 -f net7.0-windows10.0.19041.0

  #  - name: Build exe
  #    run: dotnet build src/Client/App/TodoTemplateDevOps.Client.App.csproj /P:BlazorMode=BlazorHybrid /P:Configuration=Release /P:WindowsPackageType=None /P:SelfContained=true /P:WindowsAppSDKSelfContained=true /P:GenerateAppxPackageOnBuild=false /p:RuntimeIdentifier=win10-x86 -f net7.0-windows10.0.19041.0

  #  - name: Upload artifact for deployment job
  #    uses: actions/upload-artifact@v2
  #    with:
  #      name: win-exe
  #      path: src/Client/App/bin/release/net7.0-windows10.0.19041.0/win10-x86

  #build-blazor-hybrid-android:
  #  name: build blazor hybrid (android)
  #  runs-on: windows-latest

  #  steps:
    
  #  - name: Checkout source code
  #    uses: actions/checkout@v3
    
  #  - name: Setup .NET
  #    uses: actions/setup-dotnet@v3
  #    with:
  #      global-json-file: src/global.json

  #  - name: Extract Android signing key from env
  #    uses: timheuer/base64-to-file@v1
  #    with:
  #        fileDir: './src/Client/App/'
  #        fileName: 'TodoTemplate.keystore'
  #        encodedString: ${{ secrets.ANDROID_RELEASE_KEYSTORE }}

  #  - name: Update appsettings.json api server address
  #    uses: microsoft/variable-substitution@v1 
  #    with:
  #      files: 'src/Client/Shared/wwwroot/appsettings.json'
  #    env:
  #      ApiServerAddress: ${{ env.API_SERVER_ADDRESS }}

  #  - name: Restore workloads
  #    run: dotnet workload restore src/Client/App/TodoTemplateDevOps.Client.App.csproj /P:BlazorMode=BlazorHybrid -f net7.0-android

  #  - name: Build (To generate CSS/JS files)
  #    run: dotnet build src/Client/App/TodoTemplateDevOps.Client.App.csproj /P:BlazorMode=BlazorHybrid /P:Configuration=Release /P:RunAOTCompilation=false -f net7.0-android

  #  - name: Build aab
  #    run: dotnet build src/Client/App/TodoTemplateDevOps.Client.App.csproj /P:BlazorMode=BlazorHybrid /P:Configuration=Release /P:AndroidPackageFormat=aab /P:AndroidKeyStore=true /P:AndroidSigningKeyStore="TodoTemplate.keystore" /P:AndroidSigningKeyAlias=TodoTemplate /P:AndroidSigningKeyPass="${{ secrets.ANDROID_RELEASE_KEYSTORE_PASSWORD }}" /P:AndroidSigningStorePass="${{ secrets.ANDROID_RELEASE_SIGNING_PASSWORD }}" -f net7.0-android

  #  - name: Build apk
  #    run: dotnet build src/Client/App/TodoTemplateDevOps.Client.App.csproj /P:BlazorMode=BlazorHybrid /P:Configuration=Release /P:AndroidKeyStore=true /P:AndroidSigningKeyStore="TodoTemplate.keystore" /P:AndroidSigningKeyAlias=TodoTemplate /P:AndroidSigningKeyPass="${{ secrets.ANDROID_RELEASE_KEYSTORE_PASSWORD }}" /P:AndroidSigningStorePass="${{ secrets.ANDROID_RELEASE_SIGNING_PASSWORD }}" -f net7.0-android

  #  - name: Upload artifact for deployment job
  #    uses: actions/upload-artifact@v2
  #    with:
  #      name: android-bundles
  #      path: src/Client/App/bin/release/net7.0-android/*-Signed.*

  #build-blazor-hybrid-maccatalyst:
  #  name: build blazor hybrid (maccatalyst)
  #  runs-on: macos-latest

  #  steps:
    
  #  - name: Checkout source code
  #    uses: actions/checkout@v3
    
  #  - name: Setup .NET
  #    uses: actions/setup-dotnet@v3
  #    with:
  #      global-json-file: src/global.json

  #  - name: Update appsettings.json api server address
  #    uses: microsoft/variable-substitution@v1 
  #    with:
  #      files: 'src/Client/Shared/wwwroot/appsettings.json'
  #    env:
  #      ApiServerAddress: ${{ env.API_SERVER_ADDRESS }}

  #  - name: Restore workloads
  #    run: dotnet workload restore src/Client/App/TodoTemplateDevOps.Client.App.csproj /P:BlazorMode=BlazorHybrid -f net7.0-maccatalyst

  #  - name: Build (To generate CSS/JS files)
  #    run: dotnet build src/Client/App/TodoTemplateDevOps.Client.App.csproj /P:BlazorMode=BlazorHybrid /P:Configuration=Release /P:CreatePackage=true -f net7.0-maccatalyst

  #  - name: Build pkg
  #    run: dotnet build src/Client/App/TodoTemplateDevOps.Client.App.csproj /P:BlazorMode=BlazorHybrid /P:Configuration=Release /P:CreatePackage=true -f net7.0-maccatalyst

  #  - name: Upload artifact for deployment job
  #    uses: actions/upload-artifact@v2
  #    with:
  #      name: mac-pkg
  #      path: src/Client/App/bin/release/net7.0-maccatalyst/*.pkg

  build-blazor-hybrid-iOS:
    name: build blazor hybrid (iOS)
    runs-on: macos-12

    steps:
    
    - name: Checkout source code
      uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        global-json-file: src/global.json

    - name: Update appsettings.json api server address
      uses: microsoft/variable-substitution@v1 
      with:
        files: 'src/Client/Shared/wwwroot/appsettings.json'
      env:
        ApiServerAddress: ${{ env.API_SERVER_ADDRESS }}

    - name: Restore workloads
      run: dotnet workload restore src/Client/App/TodoTemplateDevOps.Client.App.csproj /P:BlazorMode=BlazorHybrid -f net7.0-ios

    - name: Build (To generate CSS/JS files)
      run: dotnet build src/Client/App/TodoTemplateDevOps.Client.App.csproj /P:BlazorMode=BlazorHybrid /P:Configuration=Release /P:RuntimeIdentifier=ios-arm64 -f net7.0-ios

    - name: Build ipa
      run: dotnet build src/Client/App/TodoTemplateDevOps.Client.App.csproj /P:BlazorMode=BlazorHybrid /P:Configuration=Release /P:RuntimeIdentifier=ios-arm64 /P:ArchiveOnBuild=true -f net7.0-ios

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v2
      with:
        name: iOS-bundles
        path: src/Client/App/bin/release/net7.0-ios